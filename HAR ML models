{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.linear_model import ElasticNetCV, ElasticNet\n",
    "from sklearn.linear_model import SGDClassifier\n",
    "from sklearn.model_selection import train_test_split, cross_val_score\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn import metrics\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.metrics import f1_score\n",
    "from sklearn.metrics import classification_report\n",
    "from sklearn.metrics import confusion_matrix\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from matplotlib.colors import ListedColormap\n",
    "from mpl_toolkits.mplot3d import axes3d\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Part 1: Understanding the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# function to load a single file as a numpy array\n",
    "def load_file(filepath):\n",
    "    dataframe = pd.read_csv(filepath, header=None, delim_whitespace=True)\n",
    "    return dataframe.values\n",
    "\n",
    "# function to load a dataset group, such as train or test\n",
    "def load_dataset_group(group, prefix=''):\n",
    "    # load input data\n",
    "    X = load_file(prefix + group + '/X_'+group+'.txt')\n",
    "    # load class output\n",
    "    y = load_file(prefix + group + '/y_'+group+'.txt')\n",
    "    return X, y\n",
    "\n",
    "# function to load the dataset, returns train and test X and y elements\n",
    "def load_dataset(prefix=''):\n",
    "    # load all train\n",
    "    trainX, trainy = load_dataset_group('train', prefix + 'desktop/SIT720/Assignment 4/')\n",
    "    print(trainX.shape, trainy.shape)\n",
    "    # load all test\n",
    "    testX, testy = load_dataset_group('test', prefix + 'desktop/SIT720/Assignment 4/')\n",
    "    print(testX.shape, testy.shape)\n",
    "    # flatten y\n",
    "    trainy, testy = trainy[:,0], testy[:,0]\n",
    "    print(trainX.shape, trainy.shape, testX.shape, testy.shape)\n",
    "    return trainX, trainy, testX, testy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(7352, 561) (7352, 1)\n",
      "(2947, 561) (2947, 1)\n",
      "(7352, 561) (7352,) (2947, 561) (2947,)\n"
     ]
    }
   ],
   "source": [
    "# load dataset\n",
    "trainX, trainy, testX, testy = load_dataset()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Part 2: K-Nearest Neighbour Classification"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Validation performance: [0.89219979 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.90267799 0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.90267799 0.90321832\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.90267799 0.90321832\n",
      " 0.90376737 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.90267799 0.90321832\n",
      " 0.90376737 0.90376644 0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.90267799 0.90321832\n",
      " 0.90376737 0.90376644 0.903762   0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.90267799 0.90321832\n",
      " 0.90376737 0.90376644 0.903762   0.90335069 0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.90267799 0.90321832\n",
      " 0.90376737 0.90376644 0.903762   0.90335069 0.9030832  0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.90267799 0.90321832\n",
      " 0.90376737 0.90376644 0.903762   0.90335069 0.9030832  0.90226076\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.90267799 0.90321832\n",
      " 0.90376737 0.90376644 0.903762   0.90335069 0.9030832  0.90226076\n",
      " 0.90281071 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.90267799 0.90321832\n",
      " 0.90376737 0.90376644 0.903762   0.90335069 0.9030832  0.90226076\n",
      " 0.90281071 0.90280868 0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.90267799 0.90321832\n",
      " 0.90376737 0.90376644 0.903762   0.90335069 0.9030832  0.90226076\n",
      " 0.90281071 0.90280868 0.90335273 0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.90267799 0.90321832\n",
      " 0.90376737 0.90376644 0.903762   0.90335069 0.9030832  0.90226076\n",
      " 0.90281071 0.90280868 0.90335273 0.90294344 0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.90267799 0.90321832\n",
      " 0.90376737 0.90376644 0.903762   0.90335069 0.9030832  0.90226076\n",
      " 0.90281071 0.90280868 0.90335273 0.90294344 0.90118138 0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.90267799 0.90321832\n",
      " 0.90376737 0.90376644 0.903762   0.90335069 0.9030832  0.90226076\n",
      " 0.90281071 0.90280868 0.90335273 0.90294344 0.90118138 0.90280961\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.90267799 0.90321832\n",
      " 0.90376737 0.90376644 0.903762   0.90335069 0.9030832  0.90226076\n",
      " 0.90281071 0.90280868 0.90335273 0.90294344 0.90118138 0.90280961\n",
      " 0.90159066 0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.90267799 0.90321832\n",
      " 0.90376737 0.90376644 0.903762   0.90335069 0.9030832  0.90226076\n",
      " 0.90281071 0.90280868 0.90335273 0.90294344 0.90118138 0.90280961\n",
      " 0.90159066 0.90158825 0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.90267799 0.90321832\n",
      " 0.90376737 0.90376644 0.903762   0.90335069 0.9030832  0.90226076\n",
      " 0.90281071 0.90280868 0.90335273 0.90294344 0.90118138 0.90280961\n",
      " 0.90159066 0.90158825 0.90186092 0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.90267799 0.90321832\n",
      " 0.90376737 0.90376644 0.903762   0.90335069 0.9030832  0.90226076\n",
      " 0.90281071 0.90280868 0.90335273 0.90294344 0.90118138 0.90280961\n",
      " 0.90159066 0.90158825 0.90186092 0.90185833 0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.90267799 0.90321832\n",
      " 0.90376737 0.90376644 0.903762   0.90335069 0.9030832  0.90226076\n",
      " 0.90281071 0.90280868 0.90335273 0.90294344 0.90118138 0.90280961\n",
      " 0.90159066 0.90158825 0.90186092 0.90185833 0.90009275 0.\n",
      " 0.        ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.90267799 0.90321832\n",
      " 0.90376737 0.90376644 0.903762   0.90335069 0.9030832  0.90226076\n",
      " 0.90281071 0.90280868 0.90335273 0.90294344 0.90118138 0.90280961\n",
      " 0.90159066 0.90158825 0.90186092 0.90185833 0.90009275 0.90063215\n",
      " 0.        ]\n",
      "Validation performance: [0.89219979 0.88049779 0.90363478 0.90159282 0.90744195 0.90607916\n",
      " 0.90771723 0.90976064 0.9064907  0.91030024 0.90826053 0.90880345\n",
      " 0.90717207 0.90921125 0.90853319 0.90676743 0.90730278 0.90743513\n",
      " 0.90757174 0.90865908 0.90716524 0.9056701  0.90635724 0.90526657\n",
      " 0.9058132  0.90512866 0.9052625  0.90389879 0.90267799 0.90321832\n",
      " 0.90376737 0.90376644 0.903762   0.90335069 0.9030832  0.90226076\n",
      " 0.90281071 0.90280868 0.90335273 0.90294344 0.90118138 0.90280961\n",
      " 0.90159066 0.90158825 0.90186092 0.90185833 0.90009275 0.90063215\n",
      " 0.89981675]\n"
     ]
    }
   ],
   "source": [
    "# empty list that will hold cv accuracy scores\n",
    "knn_cv_accscores = np.zeros(len(neighbors))\n",
    "index = 0\n",
    "\n",
    "# perform 10-fold cross validation\n",
    "for k in neighbors:\n",
    "    knn = KNeighborsClassifier(n_neighbors=k)\n",
    "    knn_cv_accscores[index] = (cross_val_score(knn, trainX, trainy, cv=10, scoring='accuracy')).mean()\n",
    "    index+=1\n",
    "    print(\"Validation performance: {}\".format(knn_cv_accscores))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0.75, 0.95)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot accuracy score\n",
    "plt.plot(range(1,50),knn_cv_accscores)\n",
    "plt.xlabel(\"K-neighbors\")\n",
    "plt.ylabel(\"Accuracy\")\n",
    "plt.title(\"Plot of Accuracy respect to number of K-neighbor\")\n",
    "plt.ylim(0.75,0.95)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Validation performance: [0.89103966 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.90115146 0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.90115146 0.90187003\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.90115146 0.90187003\n",
      " 0.90231898 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.90115146 0.90187003\n",
      " 0.90231898 0.90241339 0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.90115146 0.90187003\n",
      " 0.90231898 0.90241339 0.90232691 0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.90115146 0.90187003\n",
      " 0.90231898 0.90241339 0.90232691 0.90200996 0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.90115146 0.90187003\n",
      " 0.90231898 0.90241339 0.90232691 0.90200996 0.90157322 0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.90115146 0.90187003\n",
      " 0.90231898 0.90241339 0.90232691 0.90200996 0.90157322 0.90087149\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.90115146 0.90187003\n",
      " 0.90231898 0.90241339 0.90232691 0.90200996 0.90157322 0.90087149\n",
      " 0.90124668 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.90115146 0.90187003\n",
      " 0.90231898 0.90241339 0.90232691 0.90200996 0.90157322 0.90087149\n",
      " 0.90124668 0.9013852  0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.90115146 0.90187003\n",
      " 0.90231898 0.90241339 0.90232691 0.90200996 0.90157322 0.90087149\n",
      " 0.90124668 0.9013852  0.90175513 0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.90115146 0.90187003\n",
      " 0.90231898 0.90241339 0.90232691 0.90200996 0.90157322 0.90087149\n",
      " 0.90124668 0.9013852  0.90175513 0.90148689 0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.90115146 0.90187003\n",
      " 0.90231898 0.90241339 0.90232691 0.90200996 0.90157322 0.90087149\n",
      " 0.90124668 0.9013852  0.90175513 0.90148689 0.89953421 0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.90115146 0.90187003\n",
      " 0.90231898 0.90241339 0.90232691 0.90200996 0.90157322 0.90087149\n",
      " 0.90124668 0.9013852  0.90175513 0.90148689 0.89953421 0.90131872\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.90115146 0.90187003\n",
      " 0.90231898 0.90241339 0.90232691 0.90200996 0.90157322 0.90087149\n",
      " 0.90124668 0.9013852  0.90175513 0.90148689 0.89953421 0.90131872\n",
      " 0.89988204 0.         0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.90115146 0.90187003\n",
      " 0.90231898 0.90241339 0.90232691 0.90200996 0.90157322 0.90087149\n",
      " 0.90124668 0.9013852  0.90175513 0.90148689 0.89953421 0.90131872\n",
      " 0.89988204 0.89997689 0.         0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.90115146 0.90187003\n",
      " 0.90231898 0.90241339 0.90232691 0.90200996 0.90157322 0.90087149\n",
      " 0.90124668 0.9013852  0.90175513 0.90148689 0.89953421 0.90131872\n",
      " 0.89988204 0.89997689 0.90018447 0.         0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.90115146 0.90187003\n",
      " 0.90231898 0.90241339 0.90232691 0.90200996 0.90157322 0.90087149\n",
      " 0.90124668 0.9013852  0.90175513 0.90148689 0.89953421 0.90131872\n",
      " 0.89988204 0.89997689 0.90018447 0.90026449 0.         0.\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.90115146 0.90187003\n",
      " 0.90231898 0.90241339 0.90232691 0.90200996 0.90157322 0.90087149\n",
      " 0.90124668 0.9013852  0.90175513 0.90148689 0.89953421 0.90131872\n",
      " 0.89988204 0.89997689 0.90018447 0.90026449 0.89829895 0.\n",
      " 0.        ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.90115146 0.90187003\n",
      " 0.90231898 0.90241339 0.90232691 0.90200996 0.90157322 0.90087149\n",
      " 0.90124668 0.9013852  0.90175513 0.90148689 0.89953421 0.90131872\n",
      " 0.89988204 0.89997689 0.90018447 0.90026449 0.89829895 0.89902477\n",
      " 0.        ]\n",
      "Validation performance: [0.89103966 0.87928168 0.90223102 0.90091118 0.90627248 0.90526488\n",
      " 0.90647518 0.90892069 0.90522362 0.90939019 0.90706175 0.90795928\n",
      " 0.90599434 0.90827846 0.90737136 0.90579167 0.90603869 0.90628374\n",
      " 0.90636096 0.90758631 0.90589828 0.9044881  0.90501825 0.90402243\n",
      " 0.90437341 0.9037721  0.90375545 0.90254869 0.90115146 0.90187003\n",
      " 0.90231898 0.90241339 0.90232691 0.90200996 0.90157322 0.90087149\n",
      " 0.90124668 0.9013852  0.90175513 0.90148689 0.89953421 0.90131872\n",
      " 0.89988204 0.89997689 0.90018447 0.90026449 0.89829895 0.89902477\n",
      " 0.89807363]\n"
     ]
    }
   ],
   "source": [
    "# creating list of K for KNN\n",
    "neighbors = list(range(1,50))\n",
    "\n",
    "# empty list that will hold cv f1 scores\n",
    "knn_cv_scores = np.zeros(len(neighbors))\n",
    "index = 0\n",
    "\n",
    "# perform 10-fold cross validation\n",
    "for k in neighbors:\n",
    "    knn = KNeighborsClassifier(n_neighbors=k)\n",
    "    knn_cv_scores[index] = (cross_val_score(knn, trainX, trainy, cv=10, scoring='f1_weighted')).mean()\n",
    "    index+=1\n",
    "    print(\"Validation performance: {}\".format(knn_cv_scores))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 455,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best K: 10\n"
     ]
    }
   ],
   "source": [
    "# K value at which cross-validation performance is maximum\n",
    "max_k_index = np.argmax(knn_cv_scores)\n",
    "best_k = neighbors[max_k_index]\n",
    "print(\"Best K: {}\".format(best_k))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 456,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model Classification Report:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           1       0.98      0.85      0.91       573\n",
      "           2       0.92      0.91      0.91       476\n",
      "           3       0.78      0.96      0.86       342\n",
      "           4       0.83      0.89      0.86       458\n",
      "           5       0.91      0.86      0.88       565\n",
      "           6       0.99      1.00      1.00       533\n",
      "\n",
      "    accuracy                           0.91      2947\n",
      "   macro avg       0.90      0.91      0.90      2947\n",
      "weighted avg       0.91      0.91      0.91      2947\n",
      "\n",
      "Model Accuracy is: 0.9066847641669494\n",
      "Model F1-score is: 0.9073913403037309\n",
      "Model Confusion Matrix\n",
      "[[486  36  51   0   0   0]\n",
      " [  0 431  41   4   0   0]\n",
      " [ 10   4 328   0   0   0]\n",
      " [  0   0   0 409  47   2]\n",
      " [  0   0   0  78 485   2]\n",
      " [  0   0   0   0   0 533]]\n"
     ]
    }
   ],
   "source": [
    "# Re-train Knn model with best K value\n",
    "best_knn = KNeighborsClassifier(n_neighbors = best_k)\n",
    "best_knn.fit(trainX, trainy)\n",
    "best_knn_predict = best_knn.predict(testX)\n",
    "\n",
    "# Evaluate the model\n",
    "print(\"Model Classification Report:\")\n",
    "print(format(classification_report(best_knn_predict, testy)))\n",
    "print(\"Model Accuracy is: {}\".format(accuracy_score(best_knn_predict, testy)))\n",
    "print(\"Model F1-score is: {}\".format(f1_score(best_knn_predict, testy, average = 'weighted')))\n",
    "print(\"Model Confusion Matrix\")\n",
    "print(format(confusion_matrix(best_knn_predict, testy)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Part 3: Multiclass Logistic Regression with Elastic Net"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 449,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Validation performance: [0.94158577 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.93425263 0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.93425263 0.93575088 0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.93425263 0.93575088 0.94146804\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.93425263 0.93575088 0.94146804\n",
      " 0.94471171 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.93425263 0.93575088 0.94146804\n",
      " 0.94471171 0.94281121 0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.93425263 0.93575088 0.94146804\n",
      " 0.94471171 0.94281121 0.93261496 0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.93425263 0.93575088 0.94146804\n",
      " 0.94471171 0.94281121 0.93261496 0.93396865 0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.93425263 0.93575088 0.94146804\n",
      " 0.94471171 0.94281121 0.93261496 0.93396865 0.93110485 0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.93425263 0.93575088 0.94146804\n",
      " 0.94471171 0.94281121 0.93261496 0.93396865 0.93110485 0.93272377\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.93425263 0.93575088 0.94146804\n",
      " 0.94471171 0.94281121 0.93261496 0.93396865 0.93110485 0.93272377\n",
      " 0.93245999 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.93425263 0.93575088 0.94146804\n",
      " 0.94471171 0.94281121 0.93261496 0.93396865 0.93110485 0.93272377\n",
      " 0.93245999 0.91494308 0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.93425263 0.93575088 0.94146804\n",
      " 0.94471171 0.94281121 0.93261496 0.93396865 0.93110485 0.93272377\n",
      " 0.93245999 0.91494308 0.91573953 0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.93425263 0.93575088 0.94146804\n",
      " 0.94471171 0.94281121 0.93261496 0.93396865 0.93110485 0.93272377\n",
      " 0.93245999 0.91494308 0.91573953 0.91627303 0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.93425263 0.93575088 0.94146804\n",
      " 0.94471171 0.94281121 0.93261496 0.93396865 0.93110485 0.93272377\n",
      " 0.93245999 0.91494308 0.91573953 0.91627303 0.90034744 0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.93425263 0.93575088 0.94146804\n",
      " 0.94471171 0.94281121 0.93261496 0.93396865 0.93110485 0.93272377\n",
      " 0.93245999 0.91494308 0.91573953 0.91627303 0.90034744 0.89491299\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.93425263 0.93575088 0.94146804\n",
      " 0.94471171 0.94281121 0.93261496 0.93396865 0.93110485 0.93272377\n",
      " 0.93245999 0.91494308 0.91573953 0.91627303 0.90034744 0.89491299\n",
      " 0.89885561 0.         0.         0.         0.         0.        ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.93425263 0.93575088 0.94146804\n",
      " 0.94471171 0.94281121 0.93261496 0.93396865 0.93110485 0.93272377\n",
      " 0.93245999 0.91494308 0.91573953 0.91627303 0.90034744 0.89491299\n",
      " 0.89885561 0.90143645 0.         0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.93425263 0.93575088 0.94146804\n",
      " 0.94471171 0.94281121 0.93261496 0.93396865 0.93110485 0.93272377\n",
      " 0.93245999 0.91494308 0.91573953 0.91627303 0.90034744 0.89491299\n",
      " 0.89885561 0.90143645 0.88673867 0.         0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.93425263 0.93575088 0.94146804\n",
      " 0.94471171 0.94281121 0.93261496 0.93396865 0.93110485 0.93272377\n",
      " 0.93245999 0.91494308 0.91573953 0.91627303 0.90034744 0.89491299\n",
      " 0.89885561 0.90143645 0.88673867 0.85734835 0.         0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.93425263 0.93575088 0.94146804\n",
      " 0.94471171 0.94281121 0.93261496 0.93396865 0.93110485 0.93272377\n",
      " 0.93245999 0.91494308 0.91573953 0.91627303 0.90034744 0.89491299\n",
      " 0.89885561 0.90143645 0.88673867 0.85734835 0.83324832 0.        ]\n",
      "Validation performance: [0.94158577 0.94636565 0.94188474 0.93915509 0.94078573 0.94349703\n",
      " 0.94172701 0.94540663 0.94173628 0.93425263 0.93575088 0.94146804\n",
      " 0.94471171 0.94281121 0.93261496 0.93396865 0.93110485 0.93272377\n",
      " 0.93245999 0.91494308 0.91573953 0.91627303 0.90034744 0.89491299\n",
      " 0.89885561 0.90143645 0.88673867 0.85734835 0.83324832 0.79652266]\n"
     ]
    }
   ],
   "source": [
    "# creating list of alpha and l1 ratios:\n",
    "alphas = [1e-4,3e-4,1e-3,3e-3,1e-2,3e-2]\n",
    "l1_ratios = [0,0.15,0.5,0.7,1]\n",
    "enpara = [[a,l] for a in alphas for l in l1_ratios]\n",
    "enpara = np.array(enpara)\n",
    "\n",
    "# empty list that will hold cv scores\n",
    "en_cv_scores = np.zeros(len(alphas)*len(l1_ratios))\n",
    "index = 0\n",
    "\n",
    "# perform 10-fold cross validation (accuracy score)\n",
    "for i in range(len(para)):\n",
    "    en = SGDClassifier(loss='log', penalty='elasticnet', alpha = enpara[i][0], l1_ratio = enpara[i][1], max_iter=1000)\n",
    "    en_cv_scores[index] = (cross_val_score(en, trainX, trainy, cv=10, scoring='accuracy')).mean()\n",
    "    index+=1\n",
    "    print(\"Validation performance: {}\".format(en_cv_scores))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 453,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best ElasticNet parameters: [1.0e-04 1.5e-01]\n"
     ]
    }
   ],
   "source": [
    "# Parameter values at which cross-validation performance is maximum\n",
    "max_enpara_index = np.argmax(en_cv_scores)\n",
    "best_enpara = enpara[max_enpara_index]\n",
    "print(\"Best ElasticNet parameters: {}\".format(best_enpara))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 454,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model Classification Report:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           1       1.00      0.94      0.96       528\n",
      "           2       0.94      0.97      0.95       458\n",
      "           3       0.96      1.00      0.98       404\n",
      "           4       0.83      0.98      0.90       416\n",
      "           5       0.98      0.87      0.92       604\n",
      "           6       1.00      1.00      1.00       537\n",
      "\n",
      "    accuracy                           0.95      2947\n",
      "   macro avg       0.95      0.96      0.95      2947\n",
      "weighted avg       0.96      0.95      0.95      2947\n",
      "\n",
      "Model Accuracy is: 0.9524940617577197\n",
      "Model F1-score is: 0.952778216089605\n",
      "Model Confusion Matrix\n",
      "[[494  29   4   0   1   0]\n",
      " [  1 442  12   3   0   0]\n",
      " [  1   0 403   0   0   0]\n",
      " [  0   0   0 408   8   0]\n",
      " [  0   0   1  80 523   0]\n",
      " [  0   0   0   0   0 537]]\n"
     ]
    }
   ],
   "source": [
    "# Re-train ElasticNet model with best Parameter values\n",
    "best_en = SGDClassifier(loss='log', penalty='elasticnet', alpha = best_enpara[0], l1_ratio = best_enpara[1], max_iter=1000)\n",
    "best_en.fit(trainX, trainy)\n",
    "best_en_predict = best_en.predict(testX)\n",
    "\n",
    "# Evaluate model\n",
    "print(\"Model Classification Report:\")\n",
    "print(format(classification_report(best_en_predict, testy)))\n",
    "print(\"Model Accuracy is: {}\".format(accuracy_score(best_en_predict, testy)))\n",
    "print(\"Model F1-score is: {}\".format(f1_score(best_en_predict, testy, average = 'weighted')))\n",
    "print(\"Model Confusion Matrix\")\n",
    "print(format(confusion_matrix(best_en_predict, testy)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 466,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Validation performance: [0.93944918 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.930651   0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.930651   0.93279806 0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.930651   0.93279806 0.94168932\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.930651   0.93279806 0.94168932\n",
      " 0.94498331 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.930651   0.93279806 0.94168932\n",
      " 0.94498331 0.93884863 0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.930651   0.93279806 0.94168932\n",
      " 0.94498331 0.93884863 0.92814888 0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.930651   0.93279806 0.94168932\n",
      " 0.94498331 0.93884863 0.92814888 0.92940288 0.         0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.930651   0.93279806 0.94168932\n",
      " 0.94498331 0.93884863 0.92814888 0.92940288 0.93459625 0.\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.930651   0.93279806 0.94168932\n",
      " 0.94498331 0.93884863 0.92814888 0.92940288 0.93459625 0.9321384\n",
      " 0.         0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.930651   0.93279806 0.94168932\n",
      " 0.94498331 0.93884863 0.92814888 0.92940288 0.93459625 0.9321384\n",
      " 0.92895663 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.930651   0.93279806 0.94168932\n",
      " 0.94498331 0.93884863 0.92814888 0.92940288 0.93459625 0.9321384\n",
      " 0.92895663 0.91543447 0.         0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.930651   0.93279806 0.94168932\n",
      " 0.94498331 0.93884863 0.92814888 0.92940288 0.93459625 0.9321384\n",
      " 0.92895663 0.91543447 0.91794738 0.         0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.930651   0.93279806 0.94168932\n",
      " 0.94498331 0.93884863 0.92814888 0.92940288 0.93459625 0.9321384\n",
      " 0.92895663 0.91543447 0.91794738 0.91436148 0.         0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.930651   0.93279806 0.94168932\n",
      " 0.94498331 0.93884863 0.92814888 0.92940288 0.93459625 0.9321384\n",
      " 0.92895663 0.91543447 0.91794738 0.91436148 0.89785562 0.\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.930651   0.93279806 0.94168932\n",
      " 0.94498331 0.93884863 0.92814888 0.92940288 0.93459625 0.9321384\n",
      " 0.92895663 0.91543447 0.91794738 0.91436148 0.89785562 0.88851838\n",
      " 0.         0.         0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.930651   0.93279806 0.94168932\n",
      " 0.94498331 0.93884863 0.92814888 0.92940288 0.93459625 0.9321384\n",
      " 0.92895663 0.91543447 0.91794738 0.91436148 0.89785562 0.88851838\n",
      " 0.8951092  0.         0.         0.         0.         0.        ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.930651   0.93279806 0.94168932\n",
      " 0.94498331 0.93884863 0.92814888 0.92940288 0.93459625 0.9321384\n",
      " 0.92895663 0.91543447 0.91794738 0.91436148 0.89785562 0.88851838\n",
      " 0.8951092  0.89743157 0.         0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.930651   0.93279806 0.94168932\n",
      " 0.94498331 0.93884863 0.92814888 0.92940288 0.93459625 0.9321384\n",
      " 0.92895663 0.91543447 0.91794738 0.91436148 0.89785562 0.88851838\n",
      " 0.8951092  0.89743157 0.8847165  0.         0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.930651   0.93279806 0.94168932\n",
      " 0.94498331 0.93884863 0.92814888 0.92940288 0.93459625 0.9321384\n",
      " 0.92895663 0.91543447 0.91794738 0.91436148 0.89785562 0.88851838\n",
      " 0.8951092  0.89743157 0.8847165  0.84822477 0.         0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.930651   0.93279806 0.94168932\n",
      " 0.94498331 0.93884863 0.92814888 0.92940288 0.93459625 0.9321384\n",
      " 0.92895663 0.91543447 0.91794738 0.91436148 0.89785562 0.88851838\n",
      " 0.8951092  0.89743157 0.8847165  0.84822477 0.82555688 0.        ]\n",
      "Validation performance: [0.93944918 0.94072231 0.94473079 0.94057787 0.93707302 0.94390706\n",
      " 0.94199615 0.94480727 0.93919635 0.930651   0.93279806 0.94168932\n",
      " 0.94498331 0.93884863 0.92814888 0.92940288 0.93459625 0.9321384\n",
      " 0.92895663 0.91543447 0.91794738 0.91436148 0.89785562 0.88851838\n",
      " 0.8951092  0.89743157 0.8847165  0.84822477 0.82555688 0.78026192]\n"
     ]
    }
   ],
   "source": [
    "# empty list that will hold cv f1 scores\n",
    "en_cv_f1scores = np.zeros(len(alphas)*len(l1_ratios))\n",
    "index = 0\n",
    "\n",
    "# perform 10-fold cross validation (f1 score)\n",
    "for i in range(len(para)):\n",
    "    en = SGDClassifier(loss='log', penalty='elasticnet', alpha = enpara[i][0], l1_ratio = enpara[i][1], max_iter=1000)\n",
    "    en_cv_f1scores[index] = (cross_val_score(en, trainX, trainy, cv=10, scoring='f1_weighted')).mean()\n",
    "    index+=1\n",
    "    print(\"Validation performance: {}\".format(en_cv_f1scores))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 490,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Draw 3D surface plot of f1-score\n",
    "en_cv_f1scores = np.array(np.matrix(en_cv_f1scores))\n",
    "enplotpara = np.array(np.concatenate((enpara, en_cv_f1scores.T),axis=1))\n",
    "enplotpara.shape\n",
    "\n",
    "X = enplotpara[:,0]\n",
    "Y = enplotpara[:,1]\n",
    "Z = enplotpara[:,2]\n",
    "\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.plot_trisurf(X, Y, Z, cmap='viridis', edgecolor='none', alpha=.5)\n",
    "ax.scatter(X, Y, Z, c='red')\n",
    "ax.set_xlabel('Alpha')\n",
    "ax.set_ylabel('L1-ratios')\n",
    "ax.set_zlabel('F1-score')\n",
    "ax.set_zlim(.75,.95)\n",
    "ax.set_title('3D Surface plot of F1-score respect to RandomForest Parameters')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Part 4: Support Vector Machine (RBF Kernel)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Validation performance: [0.91791397 0.         0.         0.         0.         0.\n",
      " 0.         0.        ]\n",
      "Validation performance: [0.91791397 0.95048991 0.         0.         0.         0.\n",
      " 0.         0.        ]\n",
      "Validation performance: [0.91791397 0.95048991 0.95798007 0.         0.         0.\n",
      " 0.         0.        ]\n",
      "Validation performance: [0.91791397 0.95048991 0.95798007 0.95901442 0.         0.\n",
      " 0.         0.        ]\n",
      "Validation performance: [0.91791397 0.95048991 0.95798007 0.95901442 0.87331182 0.\n",
      " 0.         0.        ]\n",
      "Validation performance: [0.91791397 0.95048991 0.95798007 0.95901442 0.87331182 0.9183673\n",
      " 0.         0.        ]\n",
      "Validation performance: [0.91791397 0.95048991 0.95798007 0.95901442 0.87331182 0.9183673\n",
      " 0.95008695 0.        ]\n",
      "Validation performance: [0.91791397 0.95048991 0.95798007 0.95901442 0.87331182 0.9183673\n",
      " 0.95008695 0.95601264]\n"
     ]
    }
   ],
   "source": [
    "# creating list of gamma and C values:\n",
    "gamma = [1e-3, 1e-4]\n",
    "c_value = [1, 10, 100, 1000]\n",
    "svmpara = [[g,c] for g in gamma for c in c_value]\n",
    "svmpara = np.array(svmpara)\n",
    "\n",
    "# empty list that will hold cv precision scores\n",
    "svm_cv_scores = np.zeros(len(gamma)*len(c_value))\n",
    "index = 0\n",
    "\n",
    "# perform 10-fold cross validation\n",
    "for i in range(len(svmpara)):\n",
    "    svm = SVC(kernel='rbf', gamma=svmpara[i][0], C=svmpara[i][1])\n",
    "    svm_cv_scores[index] = (cross_val_score(svm, trainX, trainy, cv=10, scoring='precision_weighted')).mean()\n",
    "    index+=1\n",
    "    print(\"Validation performance: {}\".format(svm_cv_scores))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best SVM Parameters: [1.e-03 1.e+03]\n"
     ]
    }
   ],
   "source": [
    "# Parameter values at which cross-validation performance is maximum\n",
    "max_svmpara_index = np.argmax(svm_cv_scores)\n",
    "best_svmpara = svmpara[max_svmpara_index]\n",
    "print(\"Best SVM Parameters: {}\".format(best_svmpara))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model Classification Report:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           1       0.99      0.96      0.98       514\n",
      "           2       0.96      0.97      0.97       466\n",
      "           3       0.97      0.99      0.98       409\n",
      "           4       0.89      0.97      0.93       448\n",
      "           5       0.98      0.91      0.94       573\n",
      "           6       1.00      1.00      1.00       537\n",
      "\n",
      "    accuracy                           0.97      2947\n",
      "   macro avg       0.96      0.97      0.97      2947\n",
      "weighted avg       0.97      0.97      0.97      2947\n",
      "\n",
      "Model Accuracy is: 0.9657278588394977\n",
      "Model F1-score is: 0.9658311829513726\n",
      "Model Confusion Matrix\n",
      "[[493  17   4   0   0   0]\n",
      " [  0 454  10   2   0   0]\n",
      " [  3   0 406   0   0   0]\n",
      " [  0   0   0 436  12   0]\n",
      " [  0   0   0  53 520   0]\n",
      " [  0   0   0   0   0 537]]\n"
     ]
    }
   ],
   "source": [
    "# Re-train SVM model with best Parameter values\n",
    "best_svm = SVC(kernel='rbf',gamma=best_svmpara[0], C=best_svmpara[1])\n",
    "best_svm.fit(trainX, trainy)\n",
    "best_svm_predict = best_svm.predict(testX)\n",
    "\n",
    "# Evaluate model\n",
    "print(\"Model Classification Report:\")\n",
    "print(format(classification_report(best_svm_predict, testy)))\n",
    "print(\"Model Accuracy is: {}\".format(accuracy_score(best_svm_predict, testy)))\n",
    "print(\"Model F1-score is: {}\".format(f1_score(best_svm_predict, testy, average = 'weighted')))\n",
    "print(\"Model Confusion Matrix\")\n",
    "print(format(confusion_matrix(best_svm_predict, testy)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# empty list that will hold cv f1 scores\n",
    "svm_cv_f1scores = np.zeros(len(gamma)*len(c_value))\n",
    "index = 0\n",
    "\n",
    "# perform 10-fold cross validation\n",
    "for i in range(len(svmpara)):\n",
    "    svm = SVC(kernel='rbf', gamma=svmpara[i][0], C=svmpara[i][1])\n",
    "    svm_cv_f1scores[index] = (cross_val_score(svm, trainX, trainy, cv=10, scoring='f1_weighted')).mean()\n",
    "    index+=1\n",
    "    print(\"Validation performance: {}\".format(svm_cv_f1scores))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# Draw 3D surface plot of f1-score\n",
    "svm_cv_f1scores = np.array(np.matrix(svm_cv_f1scores))\n",
    "svmplotpara = np.array(np.concatenate((svmpara, svm_cv_f1scores.T),axis=1))\n",
    "\n",
    "X = svmplotpara[:,0]\n",
    "Y = svmplotpara[:,1]\n",
    "Z = svmplotpara[:,2]\n",
    "\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.plot_trisurf(X, Y, Z, cmap='viridis', edgecolor='none', alpha=.5)\n",
    "ax.scatter(X, Y, Z, c='red')\n",
    "ax.set_xlabel('Gamma')\n",
    "ax.set_ylabel('C-value')\n",
    "ax.set_zlabel('F1-score')\n",
    "ax.set_zlim(.75,.95)\n",
    "ax.set_title('3D Surface plot of F1-score respect to SVM Parameters')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Part 5: Random Forest "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 335,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Validation performance: [0.93191462 0.         0.         0.         0.         0.\n",
      " 0.         0.         0.        ]\n",
      "Validation performance: [0.93191462 0.93161181 0.         0.         0.         0.\n",
      " 0.         0.         0.        ]\n",
      "Validation performance: [0.93191462 0.93161181 0.93258527 0.         0.         0.\n",
      " 0.         0.         0.        ]\n",
      "Validation performance: [0.93191462 0.93161181 0.93258527 0.93191462 0.         0.\n",
      " 0.         0.         0.        ]\n",
      "Validation performance: [0.93191462 0.93161181 0.93258527 0.93191462 0.93161181 0.\n",
      " 0.         0.         0.        ]\n",
      "Validation performance: [0.93191462 0.93161181 0.93258527 0.93191462 0.93161181 0.93258527\n",
      " 0.         0.         0.        ]\n",
      "Validation performance: [0.93191462 0.93161181 0.93258527 0.93191462 0.93161181 0.93258527\n",
      " 0.93191462 0.         0.        ]\n",
      "Validation performance: [0.93191462 0.93161181 0.93258527 0.93191462 0.93161181 0.93258527\n",
      " 0.93191462 0.93161181 0.        ]\n",
      "Validation performance: [0.93191462 0.93161181 0.93258527 0.93191462 0.93161181 0.93258527\n",
      " 0.93191462 0.93161181 0.93258527]\n"
     ]
    }
   ],
   "source": [
    "# creating list of tree-depth and numbers of tree parameters:\n",
    "tdepth = [300,500,600]\n",
    "n_tree = [200,500,700]\n",
    "rfpara = [[t,n] for t in tdepth for n in n_tree]\n",
    "rfpara = np.array(rfpara)\n",
    "\n",
    "# empty list that will hold cv f1 scores\n",
    "rf_cv_scores = np.zeros(len(tdepth)*len(n_tree))\n",
    "index = 0\n",
    "\n",
    "# perform 10-fold cross validation\n",
    "for i in range(len(rfpara)):\n",
    "    rf = RandomForestClassifier(max_depth=rfpara[i][0], n_estimators=rfpara[i][1], random_state=42)\n",
    "    rf_cv_scores[index] = (cross_val_score(rf, trainX, trainy, cv=10, scoring='f1_weighted')).mean()\n",
    "    index+=1\n",
    "    print(\"Validation performance: {}\".format(rf_cv_scores))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 336,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best RandomForest Parameters: [300 700]\n"
     ]
    }
   ],
   "source": [
    "# Parameter values at which cross-validation performance is maximum\n",
    "max_rfpara_index = np.argmax(rf_cv_scores)\n",
    "best_rfpara = rfpara[max_rfpara_index]\n",
    "print(\"Best RandomForest Parameters: {}\".format(best_rfpara))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 337,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model Classification Report:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           1       0.97      0.90      0.94       535\n",
      "           2       0.92      0.89      0.91       483\n",
      "           3       0.85      0.96      0.90       369\n",
      "           4       0.89      0.91      0.90       477\n",
      "           5       0.92      0.90      0.91       546\n",
      "           6       1.00      1.00      1.00       537\n",
      "\n",
      "    accuracy                           0.93      2947\n",
      "   macro avg       0.92      0.93      0.92      2947\n",
      "weighted avg       0.93      0.93      0.93      2947\n",
      "\n",
      "Model Accuracy is: 0.9267051238547676\n",
      "Model F1-score is: 0.9269739708035433\n",
      "Model Confusion Matrix\n",
      "[[482  33  20   0   0   0]\n",
      " [  6 432  45   0   0   0]\n",
      " [  8   6 355   0   0   0]\n",
      " [  0   0   0 435  42   0]\n",
      " [  0   0   0  56 490   0]\n",
      " [  0   0   0   0   0 537]]\n"
     ]
    }
   ],
   "source": [
    "# Re-train RandomForest model with best Parameter values\n",
    "best_rf = RandomForestClassifier(max_depth=best_rfpara[0], n_estimators=best_rfpara[1], random_state=42)\n",
    "best_rf.fit(trainX, trainy)\n",
    "best_rf_predict = best_rf.predict(testX)\n",
    "\n",
    "# Evaluate model\n",
    "print(\"Model Classification Report:\")\n",
    "print(format(classification_report(best_rf_predict, testy)))\n",
    "print(\"Model Accuracy is: {}\".format(accuracy_score(best_rf_predict, testy)))\n",
    "print(\"Model F1-score is: {}\".format(f1_score(best_rf_predict, testy, average = 'weighted')))\n",
    "print(\"Model Confusion Matrix\")\n",
    "print(format(confusion_matrix(best_rf_predict, testy)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 497,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAZgAAADnCAYAAAAjOED1AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjAsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+17YcXAAAgAElEQVR4nOydeZgkVZmv3xMRuWftVV1bF9VdTe80i2zdKgguoK0DqIDN2gwq6sAd8A5zBZsLM8iIjqgzyDgyyjQCw7A4iCvIJrjclpadXqCXqq7u2tes3DO2c//IzKjMqqy9ChrM93nyeaoyI06ciIw8v/jO+RYhpaRIkSJFihSZb5S3uwNFihQpUuTdSVFgihQpUqTIglAUmCJFihQpsiAUBaZIkSJFiiwIRYEpUqRIkSILgvZ2d2ACiq5tRYoUKTIzxNvdgbEULZgiRYoUKbIgFAWmSJEiRYosCO8KgfnjH//I8uXLCQaDPProo293dwBYsmQJTz311FtyrBtuuIHq6mrq6urekuMV+cvltNNO40c/+tHb3Y0i7xCmFBghxH1CiG4hRFgIsUcI8bmcz04TQthCiGjm1SGEeEgIceIUbX5WCPGGECIihOgVQvxKCFEy25O48cYbueqqq4hGo5xzzjmzbeZt4dlnn2Xx4sWz3v/QoUN8+9vfZteuXfT09BRsX1EUgsGg8/qrv/orAHbs2MGZZ55JdXU1Qhx207fvCqZ60Jjr93/33XejqirBYJDS0lKOOeYYfvnLX866vbeL3PPIvq666qq3tA+XXXYZN9xww6TbCCEIBAIEg0EaGxv53//7f2NZ1lvUw9kjhHg2d+x+q5iOBXMrsERKWQqcBdwihDg+5/MuKWUQKAHWA28AvxdCfKhQY0KIDwBfBy6QUpYAq4GHZtN50zQBaG9vZ+3atbNp4h1Pe3s7VVVVLFq0aMJtGhoaiEajzusXv/gFAC6Xi/PPP5+77rrrrerupGS/z7dr/3cqGzZsIBqNEgqF+Ju/+Rs2bdpEKBR6u7s1Y7LnkX3dcccdM27jrbgHXn31VaLRKE8//TT3338/P/zhD2fcxjvtXhVCqLPaUUo57RewEugGzs/8fxrQUWC7O4AXJmjjWuDRSY7x7A9/+EOZZevWrfJ973uf8z8g77jjDnnkkUfKJUuWyJaWFimEkF6vVwYCAZlMJuV//ud/ylWrVslgMCiXLl0qf/CDH8hcHn30UXnMMcfIkpIS2dLSIh977DEppZShUEhefvnlsq6uTjY0NMgtW7ZI0zRlIW666Sb56U9/Wp5//vkyGAzK4447Tr7yyivO583NzfLJJ5+UUkqZTCbl1VdfLevr62V9fb28+uqrZTKZlNFoVHq9XimEkIFAQAYCAdnZ2TnuWKFQSF5yySWyurpaHnHEEfJrX/uatCxLPvnkk3n7b968edy+v/3tb2VjY2PBc8iyd+9emb4VJuf555+Xxx9/vCwpKZGLFi2SX/7yl53Pfv/738sNGzbIsrIyuXjxYrl169ZJ+y5l+rt973vfK6+55hpZUVEht2zZIqWU8q677pKrVq2S5eXl8owzzpAHDhwo2J+2tjYJyB/96EeyqalJnnLKKVJKKbdt2+b05eijj5a//e1vnX22bt0qly5dKoPBoFyyZIm877778vpy1VVXydLSUrly5Ur51FNPOftNdW/8x3/8h3PPrV69Wr744ovy4osvzrs3v/nNb+b1f6Lvf6L7pRBjfx+xWEwCcvv27c575557rqytrZWlpaXylFNOkTt27HA+27x5s/ybv/kbuXHjRhkMBuVJJ50k9+3b53z+xBNPyJUrV8rS0lJ55ZVXylNPPVVmf5+WZcmvfe1r8ogjjpA1NTXykksukaFQKO+7+c///E+5ePFiWV5eLv/93/9dbt++Xa5bt06WlZXJK6+8csLzyGU+7yHbtuU111wja2pqZGlpqVy3bp18/fXX5Z133ik1TZMul0sGAgH5iU98omBfALl37968a5s9j1tvvVW2tLQ498AjjzySd35j+7lv3z55+umny8rKSllVVSUvvPBCOTw87OzT3Nws//mf/1muW7dO+v1+efnll8uenh750Y9+VAaDQfmhD31IDg0N5fZtPfD/gBDwKnBa+m3+CbCAJBAF7si8vwp4EhgC3syO65nP7gb+Hfg1EAM+DGwEdgERoBO4Vk6iF1LK6QkM8H0gTtp9+CUgKCcXmA8CNhAo8NkpQAL4R+B9gGfM51MKzIc//GE5ODgo4/G480VkB3MppfzlL38p9+3bJ23bls8++6z0+XzyxRdflFKmB8nS0lL5xBNPSMuyZEdHh9y9e7eUUsqzzz5bXnHFFTIajcre3l554oknjhOnLDfddJPUNE0+/PDDUtd1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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Draw 3D surface plot of f1-score\n",
    "rf_cv_scores = np.array(np.matrix(rf_cv_scores))\n",
    "rfplotpara = np.array(np.concatenate((rfpara, rf_cv_scores.T),axis=1))\n",
    "\n",
    "X = rfplotpara[:,0]\n",
    "Y = rfplotpara[:,1]\n",
    "Z = rfplotpara[:,2]\n",
    "\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.plot_trisurf(X, Y, Z, cmap='viridis', edgecolor='none', alpha=.5)\n",
    "ax.scatter(X, Y, Z, c='red')\n",
    "ax.set_xlabel('Tree depth')\n",
    "ax.set_ylabel('Number of trees')\n",
    "ax.set_zlabel('F1-score')\n",
    "ax.set_zlim(.75,.95)\n",
    "ax.set_title('3D Surface plot of F1-score respect to RandomForest Parameters')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
